name: 🏎️ CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Build da solução
  build:
    name: 🛠️ Build Solution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --no-restore --configuration Release

  # Testes unitários
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal --configuration Release

  # Build da imagem Docker
  docker-build:
    name: 🐋 Docker Build
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t vehicle-resale-api:${{ github.sha }} .

      - name: Save Docker image
        run: docker save vehicle-resale-api:${{ github.sha }} > vehicle-resale-api.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: vehicle-resale-api.tar

  # Push para registry (apenas em main)
  docker-push:
    name: 🚀 Docker Push
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < vehicle-resale-api.tar

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Tag and Push Docker image
        run: |
          docker tag vehicle-resale-api:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/vehicle-resale-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/vehicle-resale-api:latest