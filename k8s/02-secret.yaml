# ===========================================
# SECRET - Dados sensíveis (senhas, tokens)
# ===========================================
# IMPORTANTE: Em produção, use ferramentas como:
# - Sealed Secrets
# - HashiCorp Vault
# - AWS Secrets Manager
# - Azure Key Vault
# NUNCA commite este arquivo com senhas reais no Git!

apiVersion: v1
kind: Secret
metadata:
  # Nome do Secret que será referenciado pelos Deployments
  name: vehicle-resale-secrets
  
  # Namespace onde o Secret será criado
  namespace: vehicle-resale
  
  # Labels para organização
  labels:
    app: vehicle-resale
    component: secrets

# Tipo do Secret
# Opaque = dados arbitrários
# kubernetes.io/dockerconfigjson = credenciais Docker
# kubernetes.io/tls = certificados TLS
type: Opaque

# stringData permite valores em texto plano (serão codificados em base64 automaticamente)
# Use 'data' com valores já em base64 se preferir
stringData:
  # ===========================================
  # Credenciais do Banco de Dados PostgreSQL
  # ===========================================
  
  # String de conexão completa para a API
  connection-string: "Host=postgres-service;Database=vehicle-db;Username=admin;Password=ra02xbo-P;Port=5432;Pooling=true;"

  # Senha do PostgreSQL separada (usada pelo deployment do PostgreSQL)
  db-password: "ra02xbo-P"
  
  # Usuário do banco (usado pelo deployment do PostgreSQL)
  db-username: "admin"
  
  # Nome do banco (usado pelo deployment do PostgreSQL)
  db-name: "vehicle-db"
  
  # JWT Secret para autenticação (se implementar)
  # jwt-secret: "your-super-secret-jwt-key-change-in-production"
  
  # API Keys externas
  # external-api-key: "your-external-service-api-key"